<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.enjoytrip.domain.member.mapper.MemberMapper">

    <select id="login" parameterType="String" resultType="Member">
        SELECT member_id, username, id, password, nickname, email
        FROM members
        WHERE id = #{id};
    </select>

    <select id="userInfo" parameterType="Long" resultType="Member">
        SELECT *
        FROM members
        WHERE member_id = #{memberId};
    </select>

    <select id="listMember" resultType="Member">
        SELECT *
        FROM members
        order by member_id;
    </select>

    <insert id="insertMember" parameterType="Member" useGeneratedKeys="true" keyProperty="memberId">
        INSERT INTO members (username, id, password, nickname, email)
        VALUES (#{username}, #{id}, #{password}, #{nickname}, #{email})
    </insert>

    <insert id="insertRole" parameterType="Long">
        INSERT INTO roles (member_id)
        VALUES (#{memberId})
    </insert>

    <update id="updateMember" parameterType="Member">
        UPDATE members
        SET password = #{password}, nickname = #{nickname},
        email = #{email}, password_token = #{passwordToken},
        password_token_expiry_date = #{passwordTokenExpiryDate}
        where member_id = #{memberId}
    </update>

    <delete id="deleteMember" parameterType="Long">
        delete from members
        WHERE member_id = #{memberId}
    </delete>

    <delete id="deleteRole" parameterType="Long">
        delete from roles
        WHERE member_id = #{memberId}
    </delete>

    <!-- jwt -->
    <update id="saveRefreshToken" parameterType="map">
        update members
        set token = #{token}
        where member_id = #{memberId}
    </update>

    <select id="getRefreshToken" parameterType="Long" resultType="String">
        select token
        from members
        where member_id = #{memberId}
    </select>

    <update id="deleteRefreshToken" parameterType="map">
        update members
        set token = #{token, jdbcType=VARCHAR}
        where member_id = #{memberId}
    </update>

    <!-- 이메일 -->
    <update id="savePasswordResetToken">
        UPDATE members
        SET password_token = #{passwordToken}, password_token_expiry_date = #{passwordTokenExpiryDate}
        WHERE member_id = #{memberId}
    </update>

    <select id="findByUsernameAndEmail" parameterType="map" resultType="Member">
        SELECT * FROM members WHERE username = #{username} AND email = #{email}
    </select>

    <select id="findByPasswordToken" resultType="Member">
        SELECT * FROM members
        WHERE password_token = #{passwordToken}
    </select>

</mapper>